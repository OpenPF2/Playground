@startuml

autonumber

UInputComponent -> BP_TwinBlastPF2Character: InputAction Attack
BP_TwinBlastPF2Character -> AbilitySystemComponent: SendGameplayEventToActor(TriggerTagCategory.TestFireWeapon)

AbilitySystemComponent -> GA_Attack_TwinBlast_FireGun: ActivateAbility()
GA_Attack_TwinBlast_FireGun -> UPF2AbilityTask_WaitForInitiativeTurn: Activate()

UPF2AbilityTask_WaitForInitiativeTurn -> UPF2AbilityTask_WaitForInitiativeTurn: Activate_Server()
UPF2AbilityTask_WaitForInitiativeTurn -> IPF2GameModeInterface: QueueActionForInitiativeTurn()

IPF2GameModeInterface -> IPF2GameModeInterface: QueueActionForCharacter()
IPF2GameModeInterface --> UPF2AbilityTask_WaitForInitiativeTurn: EPF2ActionQueueResult::Queued

UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: OnQueued()
GA_Attack_TwinBlast_FireGun -> GA_Attack_TwinBlast_FireGun: ForceSuspendBlocking()
GA_Attack_TwinBlast_FireGun -> GA_Attack_TwinBlast_FireGun: bEnforcingCosts = false

IPF2GameModeInterface -> IPF2GameModeInterface: ExecuteNextQueuedActionForCharacter()

IPF2GameModeInterface -> UPF2AbilityTask_WaitForInitiativeTurn: PerformAction()
UPF2AbilityTask_WaitForInitiativeTurn -> UPF2AbilityTask_WaitForInitiativeTurn: PerformAction_Server()

UPF2AbilityTask_WaitForInitiativeTurn -> UPF2AbilityTask_WaitForInitiativeTurn: CanAbilityProceed()
UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: ForceSuspendBlocking()
UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: CanActivateAbility(Handle, SourceTags, TargetTags)
GA_Attack_TwinBlast_FireGun --> UPF2AbilityTask_WaitForInitiativeTurn: true
UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: ForceResumeBlocking()
UPF2AbilityTask_WaitForInitiativeTurn --> UPF2AbilityTask_WaitForInitiativeTurn: CanAbilityProceed = true

UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: OnDequeued()
GA_Attack_TwinBlast_FireGun -> GA_Attack_TwinBlast_FireGun: ForceResumeBlocking()
GA_Attack_TwinBlast_FireGun -> GA_Attack_TwinBlast_FireGun: bEnforcingCosts = true

UPF2AbilityTask_WaitForInitiativeTurn -> GA_Attack_TwinBlast_FireGun: OnReadyToAct()

UPF2AbilityTask_WaitForInitiativeTurn --> IPF2GameModeInterface: EPF2AbilityActivationResult::Activated
@enduml
